
<body style = "background-color: #1a1a1a;">
<div class="d-flex align-items-center flex-grow-1">
    <form id="search-form" class="d-flex w-100" style="max-width: 300px;">
        <div class="input-group">
            <span class="input-group-text bg-white border-end-0">
                <i class="bi bi-search"></i>
            </span>
            <input id="search-bar" class="form-control border-start-0" type="search" placeholder="Search The Cave"
                aria-label="Search">
        </div>
    </form>
</div>

<div class="container my-4">

    <!-- Create Tunnel Form -->
    <div id="tunnel-form" class="border rounded p-4 d-none">
        <h4 style = "color: #f0f0f0">Dig your Tunnel</h4>
        <form action="/cave" method="POST" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="tunnel-title" class="form-label" style = "color:#f0f0f0">Tunnel Name</label>
                <input type="text" class="form-control" id="tunnel-title" name="title"
                    placeholder="Enter a tunnel name">
            </div>
            <div class="mb-3">
                <label for="convention-id" class="form-label" style = "color:#f0f0f0">Associated Convention</label>
                <select class="form-select" id="convention-id" name="convention_id">
                    <option value="" selected>None</option>
                    {{#each conventions}}
                    <option value="{{this.id}}">{{this.name}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="mb-3">
                <label for="tunnel-message" class="form-label" style = "color:#f0f0f0">Message</label>
                <textarea class="form-control" id="tunnel-message" rows="5" name="message" placeholder="Write your message..." maxlength="10000"></textarea>
                <small id="char-count" class="form-text text-muted" style = "color:#f0f0f0">0 / 10000 characters</small>

            </div>
            <div class="mb-3">
                <label for="images" class="form-label" style = "color:#f0f0f0">Upload Images (max 5)</label>
                <input type="file" name="images" id="images" class="form-control" multiple accept="image/*" max="5">
                <small class="text-muted" style = "color:#f0f0f0">You can select up to 5 images.</small>
            </div>
            <button type="submit" class="btn btn-success me-2">Create</button>
            <button type="button" class="btn btn-secondary" id="cancel">Cancel</button>
        </form>
    </div>

    <div id="search-results" class="container mt-3 p-2  border rounded shadow-sm" style= "background-color: #2a2a2a; margin-bottom:16px;"></div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <!-- Dig a Tunnel Button -->

        <button class="btn btn-primary" id="create-tunnel" {{#if isUser}}{{else}} disabled {{/if}}>Dig a Tunnel</button>\

        <form method="GET" action="/cave" class="d-flex gap-2">
            <!-- Convention Dropdown -->
            <select id="convention-list" class="form-select" name="convention" onchange="this.form.submit()">
                <option value="">All Conventions</option>
                    {{#each conventions}}
                        <option value="{{this.id}}">{{this.name}}</option>
                    {{/each}}
                </select>

            <!-- Sort Dropdown -->
            <select id="tunnel-sort" class="form-select" name="sort" onchange="this.form.submit()">
                <option value="newest">Newest</option>
                <option value="oldest">Oldest</option>
                <option value="most_liked">Most Liked</option>
                <option value="least_liked">Least Liked</option>
            </select>
        </form>
    </div>
    <!-- Tunnel Board -->

    <div id="tunnel-board" class="border rounded p-3" style="height: 70vh; overflow-y: auto; background-color:#2a2a2a">

        {{#each tunnels}}
        <div class="mb-3 p-3 border-bottom" >
            <h5> <a href="/cave/{{this.id}}" style = "color:#f0f0f0"> {{this.title}} </a> </h5>
            <small style = "color:#f0f0f0">Dug by <form action="/profile" method="POST" style="display:inline;"><input
                        type="hidden" name="username" value="{{this.username}}"><button type="submit"
                        class="btn btn-link p-0"
                        style="text-decoration: underline; color: inherit; background: none; border: none; padding: 0; font: inherit; cursor: pointer; vertical-align: baseline;">{{this.username}}</button>
                </form> on <span class="localized-date" data-date="{{this.created_at}}"></span></small>
            {{#if this.convention_name}}
            <p style = "color:#f0f0f0">
                <i class="bi bi-calendar-event"></i> 
                <a href="/conventions/{{this.convention_id}}" style = "color:#f0f0f0"> {{this.convention_name}}</a>
            </p>
            {{/if}}
            <div class="tunnel-message-container" style = "color:#f0f0f0">
                <p class="tunnel-message collapsed">{{this.message}}</p>
                <button type="button" class="btn btn-sm btn-link p-0 show-more-toggle">Show more</button>
            </div>
            <div class="row g-2 mt-2">
            {{#each this.images}}
                <div class="col-auto">
                <img src="{{this.image_path}}" alt="Tunnel image" class="img-thumbnail" style="max-width: 120px;">
                </div>
            {{/each}}
            </div>
            <form action="/like/tunnel/{{this.id}}" method="POST" class="d-inline">
                <input type="hidden" name="redirectTo" value="/cave">
                <button class="btn btn-link p-0" type="submit">
                    <i class="bi {{#if this.liked_by_user}}bi-heart-fill{{else}}bi-heart{{/if}}"></i>
                    {{this.like_count}} likes
                </button>
            </form>
            <p style = "color:#f0f0f0">{{this.reply_count}} replies</p>
        </div>
        {{/each}}

    </div>

</div>
</body>

<!-- Dig Tunnel Form/Button Script -->
<script>
    document.getElementById('create-tunnel').addEventListener('click', function () {
        document.getElementById('tunnel-form').classList.toggle('d-none');
        document.getElementById('create-tunnel').classList.add('d-none');
    });

    document.getElementById('cancel').addEventListener('click', function () {
        document.getElementById('tunnel-form').classList.add('d-none');
        document.getElementById('create-tunnel').classList.remove('d-none');
    });
</script>

<!-- Tunnel Sort Select Script -->
<script>
    const currentSort = "{{sort}}";
    const tunnelSort = document.getElementById("tunnel-sort");

    if (tunnelSort && currentSort) {
        tunnelSort.value = currentSort;
    }
</script>

<!-- Convention Sort Script -->
<script>

  const selectedConvention = "{{selectedConvention}}";
  const conventionSelect = document.getElementById("convention-list");

  if (conventionSelect && selectedConvention) {
    conventionSelect.value = selectedConvention;

  }
</script>

<!-- Dig Tunnel Char Count Script -->
<script>
  const textarea = document.getElementById('tunnel-message');
  const counter = document.getElementById('char-count');

  textarea.addEventListener('input', () => {
    counter.textContent = `${textarea.value.length} / 10000 characters`;
  });
</script>

<!-- Show More / Show Less Script -->
<script>
  document.querySelectorAll('.tunnel-message-container').forEach(container => {
    const message = container.querySelector('.tunnel-message');
    const button = container.querySelector('.show-more-toggle');

    const charLimit = 500;
    const actualLength = message.textContent.trim().length;

    if (actualLength <= charLimit) {
      button.style.display = 'none';
    }

    button.addEventListener('click', () => {
      const isCollapsed = message.classList.contains('collapsed');
      message.classList.toggle('collapsed');
      button.textContent = isCollapsed ? 'Show less' : 'Show more';
    });
  });
</script>

<!-- Max Of 5 Images Script -->
<script>
  document.getElementById('images').addEventListener('change', function (event) {
    if (this.files.length > 5) {
      alert('You can only upload up to 5 images!');
      this.value = '';
    }
  });
</script>


<script>
    <!-- START OF ChatGPT generated localized date display -->
    document.querySelectorAll('.localized-date').forEach(el => {
        const rawDate = el.dataset.date;
        const local = new Date(rawDate);

        // Format: Apr 7, 2025, 3:12 PM â€” no time zone label
        const formatted = local.toLocaleString(undefined, {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: 'numeric',
            minute: '2-digit',
            hour12: true,
        });

        el.textContent = formatted;
    });
    <!-- END OF ChatGPT generated localized date display -->

    document.addEventListener("DOMContentLoaded", () => {
        const searchForm = document.getElementById('search-form');
        const searchInput = document.getElementById('search-bar');
        const resultsContainer = document.getElementById('search-results');

        searchForm.addEventListener('submit', (e) => {
            e.preventDefault();
        });
        resultsContainer.style.display = 'none';
        searchInput.addEventListener('input', async (event) => {
            const query = event.target.value;
            resultsContainer.innerHTML = '';

            if (query.length > 0) {
                resultsContainer.style.display = 'block';
                const newUrl = `/cave/search?q=${encodeURIComponent(query)}`;
                history.pushState({ path: newUrl }, '', newUrl);

                try {
                    const response = await fetch(newUrl);
                    const results = await response.json();

                    if (results.length > 0) {
                        results.forEach(tunnel => {
                            const resultItem = document.createElement('div');
                            resultItem.className = 'result-item';
                            resultItem.innerHTML = `
                                <a href="/cave/${tunnel.id}">${tunnel.title}</a>`;
                            resultsContainer.appendChild(resultItem);
                        });
                    } else {
                        resultsContainer.innerHTML = '<p class="p-2">No conventions found</p>';
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                    resultsContainer.innerHTML = '<p class="p-2">Error loading search results</p>';
                }
            } else {
                history.pushState({ path: '/cave' }, '', '/cave');
                resultsContainer.innerHTML = '';
                resultsContainer.style.display = 'none';
            }
        });
    });
</script>